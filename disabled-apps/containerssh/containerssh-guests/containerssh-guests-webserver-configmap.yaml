apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
data:
  nginx.conf: |
    worker_processes auto;
    events {
        worker_connections 1024;
    }

    http {
        include       mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log main;
        error_log   /var/log/nginx/error.log warn;

        sendfile        on;
        tcp_nopush      on;
        tcp_nodelay     on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        map $host $containerssh_node {
            default $host;
            "~^(.*)\.ieeetamu\.org$" $1;
        }

        # Main server block to handle wildcard subdomains
        server {
            listen 80;
            server_name *.ieeetamu.org;

            # Set the subdomain from the Host header
            location / {
                # Proxy the request to the backend service corresponding to the subdomain
                proxy_pass http://$containerssh_node.containerssh-guests-headless.containerssh-guests.svc.cluster.local;

                # Pass headers along to the backend
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                resolver kube-dns.kube-system.svc.cluster.local valid=10s;
            }
        }

        # Additional error handling and custom configurations can be added here.
    }
