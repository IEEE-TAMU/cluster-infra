apiVersion: v1
kind: ConfigMap
metadata:
  name: containerssh-config
data:
  config.yaml: |-
    ssh:
      banner: "Welcome to IEEE TAMU's ContainerSSH\n"
      hostkeys:
        - /etc/containerssh/ssh_host_rsa_key
        - /etc/containerssh/ssh_host_ed25519_key
    auth:
      # The authentication server will be running in the same pod, so we use 127.0.0.1
      url: http://127.0.0.1:8080
    # We run the guest containers in the same Kubernetes cluster as ContainerSSH is running in
    backend: kubernetes
    kubernetes:
      connection:
        host: kubernetes.default.svc
        cacertFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      pod:
        metadata:
          namespace: containerssh-guests
          labels:
            app: containerssh-guests
        spec:
          subdomain: containerssh-guests
          containers:
            - name: shell
              image: ghcr.io/ieee-tamu/containerssh-guest-image:latest
              imagePullPolicy: Always
              ## Further options to lock down the execution.
              ## See https://containerssh.io/reference/kubernetes/ for more options
              # securityContext:
              #    runAsNonRoot: true
              #    runAsUser: 1000
              resources:
                limits:
                  memory: "128Mi"
                  cpu: "500m"
              env:
                - name: IEEE_SECRET
                  value: Nice job finding me!
              volumeMounts:
                - name: html
                  mountPath: /html
            - name: webserver
              image: nginx
              resources:
                limits:
                  memory: "128Mi"
                  cpu: "500m"
              ports:
                - containerPort: 80
              volumeMounts:
                - name: html
                  mountPath: /usr/share/nginx/html
          initContainers:
            - name: init
              image: busybox
              command: ["sh", "-c", "cp /index/index.html /html/index.html"]
              volumeMounts:
                - name: html
                  mountPath: /html
                - name: index
                  mountPath: /index
          volumes:
            - name: html
              emptyDir:
                sizeLimit: 1Mi
                medium: Memory
            - name: index
              configMap:
                name: guest-config
